<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssssong.choonsik.member.dao.MemberMapper">
    <!--회원 전체 조회-->
    <select id="selectAllMembers" resultType="MemberDTO">
        SELECT
            MEMBER_CODE
             ,  MEMBER_ID
             ,  MEMBER_PASSWORD
             ,  MEMBER_NAME
             ,  MEMBER_ROLE
             ,  MEMBER_EMAIL
             ,  MEMBER_STATUS
        FROM TBL_MEMBER
          AND MEMBER_STATUS = 'Y'
    </select>
    <!--회원가입 아이디 조회-->
    <select id="selectByMemberIdOnSignUp" parameterType="String" resultType="MemberDTO">
        SELECT
            MEMBER_CODE
             ,  MEMBER_ID
             ,  MEMBER_PASSWORD
             ,  MEMBER_NAME
             ,  MEMBER_ROLE
             ,  MEMBER_EMAIL
             ,  MEMBER_STATUS
        FROM TBL_MEMBER
        WHERE MEMBER_ID = #{memberId}
    </select>
    <!--아이디로 멤버 조회-->
    <select id="selectByMemberId" parameterType="String" resultType="MemberDTO">
        SELECT
            MEMBER_CODE
             ,  MEMBER_ID
             ,  MEMBER_PASSWORD
             ,  MEMBER_NAME
             ,  MEMBER_ROLE
             ,  MEMBER_EMAIL
             ,  MEMBER_STATUS
        FROM TBL_MEMBER
        WHERE MEMBER_ID = #{memberId}
        AND MEMBER_STATUS = 'Y'
    </select>
    <!--이메일로 멤버 조회-->
    <select id="selectByEmail" parameterType="String" resultType="MemberDTO">
        SELECT
                MEMBER_CODE
             ,  MEMBER_ID
             ,  MEMBER_PASSWORD
             ,  MEMBER_NAME
             ,  MEMBER_ROLE
             ,  MEMBER_EMAIL
             ,  MEMBER_STATUS
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{email}
          AND MEMBER_STATUS = 'Y'
    </select>

<!--    <select id="findByEmail" resultType="MemberDto">-->
<!--        SELECT-->
<!--                MEMBER_CODE-->
<!--             ,  MEMBER_ID-->
<!--             ,  MEMBER_NAME-->
<!--             ,  MEMBER_PASSWORD-->
<!--             ,  MEMBER_ROLE-->
<!--             ,  MEMBER_EMAIL-->
<!--        FROM TBL_MEMBER-->
<!--        WHERE MEMBER_EMAIL = #{email}-->
<!--    </select>-->
    <!--아이디로 멤버 찾기-->
    <select id="findByMemberId" parameterType="String" resultType="MemberDTO">
        SELECT
            MEMBER_CODE
             ,  MEMBER_ID
             ,  MEMBER_PASSWORD
             ,  MEMBER_NAME
             ,  MEMBER_ROLE
             ,  MEMBER_EMAIL
             ,  MEMBER_STATUS
        FROM TBL_MEMBER
        WHERE MEMBER_ID = #{memberId}
          AND MEMBER_STATUS = 'Y'
    </select>
    <!--회원 추가-->
    <insert id="insertMember" parameterType="MemberDTO">
        INSERT INTO TBL_MEMBER
        (
               MEMBER_CODE
            ,  MEMBER_ID
            ,  MEMBER_PASSWORD
            ,  MEMBER_NAME
            ,  MEMBER_ROLE
            ,  MEMBER_EMAIL
            ,  MEMBER_STATUS
        )
        VALUES
        (
            DEFAULT,
            #{memberId},
            #{memberPassword},
            #{memberName},
            DEFAULT,
            #{memberEmail},
            'Y'
        )
    </insert>
    <!--회원 정보 수정-->
    <update id="updateMember" parameterType="MemberDTO">
        UPDATE TBL_MEMBER
        SET
             MEMBER_PASSWORD = #{memberPassword}
          ,  MEMBER_NAME = #{memberName}
          ,  MEMBER_EMAIL = #{memberEmail}
        WHERE MEMBER_ID = #{memberId}
    </update>
    <!--회원 비활성화-->
    <update id="memberWithdrawal" parameterType="long">
        UPDATE TBL_MEMBER
        SET
            MEMBER_STATUS = 'N'
        WHERE MEMBER_CODE = #{memberCode}
    </update>
</mapper>
